{"name": "Проверка увеличения счётчика \"Выполнено за сегодня\"", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\" type=\"button\"> is not clickable at point (1266,222) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:335:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31", "trace": "self = <Diplom_3.tests.test_order_page.TestOrderPage object at 0x00000170A6F11280>, driver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"92d4ab66-6f57-44f3-a6aa-be3f368eec95\")>, email = 'test123test@mail.ru'\npassword = 'abrakadabra', element = ('xpath', \"//img[@alt='Флюоресцентная булка R2-D3']\"), target = ('xpath', \"//ul[@class='BurgerConstructor_basket__list__l9dp_']\")\n\n    @allure.title('Проверка увеличения счётчика \"Выполнено за сегодня\"')\n    def test_increase_counter_orders_today(\n            self,\n            driver,\n            email=Constant.TEST_EMAIL,\n            password=Constant.TEST_PASSWORD,\n            element=MainPL.FIRST_INGREDIENT,\n            target=MainPL.PLACE_ORDER\n    ):\n        order_page = OrderPage(driver)\n        # Открыть главную страницу сайта\n        order_page.go_to_site()\n        # Перейти на страницу заказов по кнопке на хедере\n        order_page.get_order_page_by_button_on_header()\n        # Получить количество заказов за сегодня\n        count_before = order_page.get_count_orders_today()\n        # Войти в аккаунт\n        order_page.get_site_as_login_user(email, password)\n        # Сделать заказ\n        order_page.get_order(element, target)\n        # Закрыть всплывающее окно\n>       order_page.close_order_window()\n\ntests\\test_order_page.py:100: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\order_page.py:90: in close_order_window\n    self.find_element_by_locator_and_click(MainPL.X_CLOSE_WINDOW)\npages\\base_page.py:31: in find_element_by_locator_and_click\n    return wait.until(EC.element_to_be_clickable(locator),\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000170A70DCC70>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <button class=\\\\\"Modal_moda...sys.mjs:204:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\" type=\"button\"> is not clickable at point (1266,222) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:335:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\nvenv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Открыть главную страницу \"Stellar Burgers\" https://stellarburgers.nomoreparties.site/", "status": "passed", "start": 1709148498350, "stop": 1709148499822}, {"name": "Перейти на страницу заказов по кнопке \"Лента заказов\" на хедере", "status": "passed", "start": 1709148499822, "stop": 1709148500147}, {"name": "Получить количество заказов за сегодня", "status": "passed", "start": 1709148500147, "stop": 1709148501205}, {"name": "Зайти на сайт под залогиненным пользователем", "status": "passed", "steps": [{"name": "Перейти на страницу входа в аккаунт по кнопке на хедере", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//p[text()='Личный Кабинет']\")"}], "start": 1709148501205, "stop": 1709148501491}, {"name": "Заполнить поля ввода \"Почта\" и \"Пароль\" для входа в аккаунт", "status": "passed", "parameters": [{"name": "locator1", "value": "('css selector', \"fieldset input[type='text']\")"}, {"name": "locator2", "value": "('css selector', \"fieldset input[type='password']\")"}, {"name": "email", "value": "'test123test@mail.ru'"}, {"name": "password", "value": "'abrakadabra'"}], "start": 1709148501492, "stop": 1709148501840}, {"name": "Перейти на главную страницу по кнопке \"Войти\" на странице входа в аккаунт", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', \"//button[text()='Войти']\")"}], "start": 1709148501840, "stop": 1709148502114}], "parameters": [{"name": "email", "value": "'test123test@mail.ru'"}, {"name": "password", "value": "'abrakadabra'"}, {"name": "locator1", "value": "('xpath', \"//p[text()='Личный Кабинет']\")"}, {"name": "locator2", "value": "('css selector', \"fieldset input[type='text']\")"}, {"name": "locator3", "value": "('css selector', \"fieldset input[type='password']\")"}, {"name": "locator4", "value": "('xpath', \"//button[text()='Войти']\")"}], "start": 1709148501205, "stop": 1709148502114}, {"name": "Сделать заказ", "status": "passed", "steps": [{"name": "Добавить ингредиент в заказ", "status": "passed", "parameters": [{"name": "element", "value": "('xpath', \"//img[@alt='Флюоресцентная булка R2-D3']\")"}, {"name": "target", "value": "('xpath', \"//ul[@class='BurgerConstructor_basket__list__l9dp_']\")"}], "start": 1709148502114, "stop": 1709148503185}, {"name": "Нажать на кнопку \"Оформить заказ\"", "status": "passed", "start": 1709148503185, "stop": 1709148503442}], "parameters": [{"name": "element", "value": "('xpath', \"//img[@alt='Флюоресцентная булка R2-D3']\")"}, {"name": "target", "value": "('xpath', \"//ul[@class='BurgerConstructor_basket__list__l9dp_']\")"}], "start": 1709148502114, "stop": 1709148503442}, {"name": "Закрыть всплывающее окно", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <button class=\"Modal_modal__close_modified__3V5XS Modal_modal__close__TnseK\" type=\"button\"> is not clickable at point (1266,222) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:191:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:335:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:176:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:135:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:204:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:84:31\n\n", "trace": "  File \"D:\\Dev\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"D:\\Dev\\Diplom\\Diplom_3\\pages\\order_page.py\", line 90, in close_order_window\n    self.find_element_by_locator_and_click(MainPL.X_CLOSE_WINDOW)\n  File \"D:\\Dev\\Diplom\\Diplom_3\\pages\\base_page.py\", line 31, in find_element_by_locator_and_click\n    return wait.until(EC.element_to_be_clickable(locator),\n  File \"D:\\Dev\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\Dev\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\Dev\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\Dev\\Diplom\\Diplom_3\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1709148503443, "stop": 1709148503497}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1709148498349, "stop": 1709148503498, "uuid": "68adc8fc-7b10-4886-b83b-4950b272ba55", "historyId": "4c0bdfd5b6b2d7474a6546edc1d19446", "testCaseId": "c724b0fbfb01455df693022983f1244d", "fullName": "tests.test_order_page.TestOrderPage#test_increase_counter_orders_today", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "DESKTOP-0EOUJEC"}, {"name": "thread", "value": "12436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}